.faq-list{padding:110px 0}@media (max-width:1199.98px){.faq-list{padding:80px 0}}@media (max-width:991.98px){.faq-list{padding:70px 0}}.faq-list__header{margin-bottom:30px}.faq-list__header .title{margin:0}.faq-list__grid{display:grid;grid-template-columns:1fr 1fr;column-gap:30px;row-gap:20px}@media (max-width:767.98px){.faq-list__grid{grid-template-columns:1fr}}.faq-list__item{box-sizing:border-box;background-color:#fff;box-shadow:7px 5px 25px rgba(42,67,113,.15);border-radius:28px;display:block;position:relative;cursor:pointer}.faq-list__item.active .faq-list__title{color:#00c3ff}.faq-list__item.active .faq-list__text{display:block}.faq-list__item.active .faq-list__arrow img{transform:rotate(180deg)}.faq-list__title{color:#1a1b1e;font-size:1rem;font-weight:500;line-height:1.15;transition:color .3s;will-change:color;padding:20px 60px 20px 20px}.faq-list__text{color:#606060;line-height:30px;display:none;transition:none;padding:0 20px 20px}.faq-list__arrow{position:absolute;top:15px;right:10px;width:30px;height:30px;background-color:#00c3ff;border-radius:50%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;pointer-events:none}.faq-list__arrow img{transition:transform .3s;will-change:transform}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
