.services-list {
  padding: 130px 0; }
  @media (max-width: 1199.98px) {
    .services-list {
      padding: 90px 0 110px; } }
  @media (max-width: 991.98px) {
    .services-list {
      padding: 80px 0 90px; } }
  @media (max-width: 575.98px) {
    .services-list {
      padding: 70px 0 80px; } }
  .services-list__grid {
    display: grid;
    grid-template-columns: .3fr .4fr .3fr;
    -webkit-column-gap: 30px;
    -moz-column-gap: 30px;
    column-gap: 30px; }
    @media (max-width: 1199.98px) {
      .services-list__grid {
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex; } }
    @media (max-width: 767.98px) {
      .services-list__grid {
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column; } }
  .services-list__photo {
    position: relative; }
  .services-list__bg {
    width: 110%;
    position: absolute;
    top: -60px;
    left: 0;
    z-index: 1; }
  .services-list .clip-path {
    position: absolute;
    width: 0;
    height: 0; }
  .services-list__clipped-image {
    width: 100%;
    height: 370px;
    -webkit-clip-path: url(#services-list-clip-path);
    clip-path: url(#services-list-clip-path);
    position: relative;
    z-index: 3; }
    .services-list__clipped-image img {
      -o-object-fit: cover;
      object-fit: cover;
      height: 100%; }
  .services-list__left {
    position: relative;
    z-index: 1; }
    @media (max-width: 767.98px) {
      .services-list__left {
        margin-bottom: 40px; } }
    @media (max-width: 575.98px) {
      .services-list__left {
        margin-bottom: 30px; } }
  .services-list__center {
    -ms-flex-item-align: center;
    align-self: center; }
    @media (max-width: 1199.98px) {
      .services-list__center {
        display: none; } }
  .services-list__right {
    position: relative;
    z-index: 1; }
  .services-list__item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    text-decoration: none; }
    .services-list__item:hover {
      text-decoration: none; }
    .services-list__item:not(:last-child) {
      margin-bottom: 80px; }
      @media (max-width: 1199.98px) {
        .services-list__item:not(:last-child) {
          margin-bottom: 40px; } }
      @media (max-width: 575.98px) {
        .services-list__item:not(:last-child) {
          margin-bottom: 30px; } }
    .services-list__item:hover .services-list__icon {
      -webkit-box-shadow: 5px 3px 13px rgba(42, 67, 113, 0.15);
      box-shadow: 5px 3px 13px rgba(42, 67, 113, 0.15);
      background: none; }
      .services-list__item:hover .services-list__icon [class^="flaticon-"]:before,
      .services-list__item:hover .services-list__icon [class^="flaticon-"]:after,
      .services-list__item:hover .services-list__icon span {
        color: #fff;
        z-index: 2; }
      .services-list__item:hover .services-list__icon_overlay {
        opacity: 1;
        z-index: 1; }
  .services-list__icon {
    -webkit-box-shadow: 5px 3px 13px rgba(42, 67, 113, 0.15);
    box-shadow: 5px 3px 13px rgba(42, 67, 113, 0.15);
    background-color: #fff;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    -ms-flex-negative: 0;
    flex-shrink: 0;
    margin-right: 30px;
    transition: box-shadow, background-color, -webkit-box-shadow 0.3s, 0.3s, 0.3s;
    will-change: box-shadow, background-color, -webkit-box-shadow;
    position: relative; }
    @media (max-width: 575.98px) {
      .services-list__icon {
        margin-right: 20px;
        width: 55px;
        height: 55px; } }
    .services-list__icon span {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      -webkit-box-align: center;
      -ms-flex-align: center;
      align-items: center;
      -webkit-box-pack: center;
      -ms-flex-pack: center;
      justify-content: center;
      height: 100%; }
    .services-list__icon [class^="flaticon-"]:before,
    .services-list__icon [class^="flaticon-"]:after {
      color: #00c3ff;
      display: inline-block;
      -webkit-transition: color 0.3s;
      transition: color 0.3s;
      will-change: color;
      font-size: 25px; }
      @media (max-width: 575.98px) {
        .services-list__icon [class^="flaticon-"]:before,
        .services-list__icon [class^="flaticon-"]:after {
          font-size: 24px; } }
    .services-list__icon_overlay {
      position: absolute;
      top: 0;
      left: 0;
      background-color: #0160e7;
      background-image: linear-gradient(-55deg, #04dbf1 0%, #0039e4 100%);
      -webkit-box-shadow: 7px 5px 20px rgba(2, 156, 236, 0.3);
      box-shadow: 7px 5px 20px rgba(2, 156, 236, 0.3);
      opacity: 0;
      width: 100%;
      height: 100%;
      z-index: -1;
      -webkit-transition: opacity 0.3s;
      transition: opacity 0.3s;
      will-change: opacity;
      border-radius: 50%; }
  .services-list__title {
    color: #1a1b1e;
    font-family: "RedHatDisplay", "Montserrat";
    font-size: 20px;
    font-weight: 700;
    line-height: 30px;
    margin-bottom: 5px;
    z-index: 1; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
