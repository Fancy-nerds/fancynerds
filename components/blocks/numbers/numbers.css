.counters {
  position: relative;
  width: 100%;
  z-index: 5;
  /*@include media-breakpoint-down(md) {
    padding: 40px 0;
  }*/
}

.counters .container {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  position: relative;
}

.counters .container .row {
  width: 100%;
}

.counters__grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  -webkit-column-gap: 30px;
  -moz-column-gap: 30px;
  column-gap: 30px;
  row-gap: 30px;
}

@media (max-width: 991.98px) {
  .counters__grid {
    grid-template-columns: repeat(2, 1fr);
    max-width: 560px;
    width: 100%;
    margin: 0 auto;
  }
}

@media (max-width: 575.98px) {
  .counters__grid {
    grid-template-columns: 1fr;
  }
}

.counters__line {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 50%;
  background: #f0f6ff;
  /*@include media-breakpoint-down(md) {
      display: none;
    }*/
}

.counters__inner {
  position: relative;
  padding: 83px 0;
  width: 100%;
}

@media (max-width: 991.98px) {
  .counters__inner {
    padding: 70px 0;
  }
}

@media (max-width: 575.98px) {
  .counters__inner {
    padding: 55px 0;
  }
}

.counters__bg {
  background: url("../../../assets/images/counters_bg.jpg.webp") no-repeat 0 0/cover;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  border-radius: 15px;
  -webkit-box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
  box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
}

.counters__bg img {
  border-radius: 15px;
  -webkit-box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
  box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
}

.counters__item {
  text-align: center;
}

.counters .subtitle {
  color: #ffd68e;
}

.counters .subtitle:before,
.counters .subtitle:after {
  background: #ffd68e;
}

.counters__count {
  font: 900 48px "RedHatDisplay", "Montserrat";
  color: #fff;
  position: relative;
}

.numbers {
  background: #f0f6ff;
  padding: 120px 0;
}

@media (max-width: 1199.98px) {
  .numbers {
    padding: 100px 0;
  }
}

@media (max-width: 991.98px) {
  .numbers {
    padding: 90px 0;
  }
}

@media (max-width: 575.98px) {
  .numbers {
    padding: 80px 0;
  }
}

.numbers__grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  -webkit-column-gap: 30px;
  -moz-column-gap: 30px;
  column-gap: 30px;
}

@media (max-width: 991.98px) {
  .numbers__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-column-gap: 0;
    -moz-column-gap: 0;
    column-gap: 0;
    margin: -15px;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }
}

@media (max-width: 575.98px) {
  .numbers__grid {
    margin: -10px;
  }
}

.numbers__col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

@media (max-width: 991.98px) {
  .numbers__col {
    padding: 15px;
    width: 50%;
  }
}

@media (max-width: 575.98px) {
  .numbers__col {
    padding: 10px;
    width: 100%;
  }
}

.numbers__col:nth-child(1) .numbers__item:after {
  height: 134px;
  background: url("../../../assets/images/numbers-item-1.png") no-repeat 0 0/cover;
}

.numbers__col:nth-child(1) .numbers__count {
  color: #00c3ff;
}

.numbers__col:nth-child(2) .numbers__item:after {
  height: 119px;
  background: url("../../../assets/images/numbers-item-2.png") no-repeat 0 0/cover;
}

.numbers__col:nth-child(2) .numbers__count {
  color: #0160e7;
}

.numbers__col:nth-child(3) .numbers__item:after {
  height: 87px;
  background: url("../../../assets/images/numbers-item-3.png") no-repeat 0 0/cover;
}

.numbers__col:nth-child(3) .numbers__count {
  color: #fe4c1c;
}

.numbers .heading {
  width: 50%;
  margin: 0 auto 40px;
}

@media (max-width: 767.98px) {
  .numbers .heading {
    margin: 0 auto 20px;
    width: 100%;
  }
}

.numbers__toggle-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-bottom: 50px;
}

.numbers__toggle-wrapper .toggle__text {
  width: 115px;
}

.numbers__toggle-wrapper .toggle__text--before {
  text-align: right;
}

.numbers__item {
  background: #fff;
  width: 100%;
  -webkit-box-shadow: 7px 5px 30px rgba(42, 67, 113, 0.1);
  box-shadow: 7px 5px 30px rgba(42, 67, 113, 0.1);
  border-radius: 15px;
  position: relative;
  min-height: 310px;
  padding: 60px 30px 120px;
  text-align: center;
}

@media (max-width: 991.98px) {
  .numbers__item {
    min-height: 240px;
    padding: 30px 30px 125px;
    text-align: center;
  }
}

.numbers__item:after {
  position: absolute;
  content: "";
  bottom: 0;
  left: 0;
  width: 100%;
}

.numbers__count {
  font: 900 36px "RedHatDisplay", "Montserrat";
  margin-bottom: 10px;
}

.numbers__text {
  color: #1a1b1e;
  font-family: "RedHatDisplay", "Montserrat";
  font-weight: 700;
}

.numbers .counters {
  height: auto;
  margin-top: 100px;
  width: 100%;
}

@media (max-width: 1199.98px) {
  .numbers .counters {
    margin-top: 80px;
  }
}

@media (max-width: 991.98px) {
  .numbers .counters {
    margin-top: 60px;
  }
}

.numbers .counters__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

.numbers .counters__count {
  color: #1a1b1e;
  margin-bottom: 10px;
}

.numbers .counters .subtitle {
  -webkit-box-ordinal-group: 3;
  -ms-flex-order: 2;
  order: 2;
  color: #fe4c1c;
}

.numbers .counters .subtitle:before,
.numbers .counters .subtitle:after {
  background: #fe4c1c;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
