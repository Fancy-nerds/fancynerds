.counters{position:relative;width:100%;z-index:1}.counters .container{height:100%;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:100%;position:relative}.counters .container .row{width:100%}.counters__grid{display:grid;grid-template-columns:repeat(4,1fr);column-gap:30px;row-gap:30px}@media (max-width:991.98px){.counters__grid{grid-template-columns:repeat(2,1fr);max-width:560px;width:100%;margin:0 auto}}@media (max-width:575.98px){.counters__grid{grid-template-columns:1fr}}.counters__inner{position:relative;padding:83px 0;width:100%}@media (max-width:991.98px){.counters__inner{padding:70px 0}}@media (max-width:575.98px){.counters__inner{padding:55px 0}}.counters__bg{position:absolute;top:0;width:100%;height:100%;background-image:url(../../../assets/images/counters_bg.jpg.webp);background-repeat:no-repeat;background-size:cover}.counters__bg,.counters__bg img{border-radius:15px;box-shadow:23px 23px 87px 0 rgba(254,76,28,.3)}.counters__item{text-align:center}.counters .subtitle{color:#ffd68e}.counters .subtitle:after,.counters .subtitle:before{background-color:#ffd68e}.counters__count{color:#fff;font-family:RedHatDisplay,Montserrat;font-weight:900;font-size:48px;position:relative}.numbers{padding:120px 0;background-color:#f0f6ff}@media (max-width:1199.98px){.numbers{padding:100px 0}}@media (max-width:991.98px){.numbers{padding:90px 0}}@media (max-width:575.98px){.numbers{padding:80px 0}}.numbers__grid{display:grid;grid-template-columns:repeat(3,1fr);column-gap:30px}@media (max-width:991.98px){.numbers__grid{display:-ms-flexbox;display:flex;column-gap:0;margin:-15px;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap}}@media (max-width:575.98px){.numbers__grid{margin:-10px}}.numbers__col{display:-ms-flexbox;display:flex}@media (max-width:991.98px){.numbers__col{padding:15px;width:50%}}@media (max-width:575.98px){.numbers__col{padding:10px;width:100%}}.numbers__col:first-child .numbers__item:after{height:134px;background:url(../../../assets/images/numbers-item-1.png) no-repeat 0 0/cover}.numbers__col:first-child .numbers__count{color:#00c3ff}.numbers__col:nth-child(2) .numbers__item:after{height:119px;background:url(../../../assets/images/numbers-item-2.png) no-repeat 0 0/cover}.numbers__col:nth-child(2) .numbers__count{color:#0160e7}.numbers__col:nth-child(3) .numbers__item:after{height:87px;background:url(../../../assets/images/numbers-item-3.png) no-repeat 0 0/cover}.numbers__col:nth-child(3) .numbers__count{color:#fe4c1c}.numbers .heading{width:50%;margin:0 auto 40px}@media (max-width:767.98px){.numbers .heading{margin:0 auto 20px;width:100%}}.numbers__toggle-wrapper{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;margin-bottom:50px}.numbers__toggle-wrapper .toggle__text{width:115px}.numbers__toggle-wrapper .toggle__text--before{text-align:right}.numbers__item{width:100%;box-shadow:7px 5px 30px rgba(42,67,113,.1);border-radius:15px;background-color:#fff;position:relative;min-height:310px;padding:60px 30px 120px;text-align:center}@media (max-width:991.98px){.numbers__item{min-height:240px;padding:30px 30px 125px;text-align:center}}.numbers__item:after{position:absolute;content:"";bottom:0;left:0;width:100%}.numbers__count{margin-bottom:10px;font-size:36px;font-weight:900}.numbers__count,.numbers__text{font-family:RedHatDisplay,Montserrat}.numbers__text{color:#1a1b1e;font-weight:700}.numbers .counters{height:auto;margin-top:100px;width:100%}@media (max-width:1199.98px){.numbers .counters{margin-top:80px}}@media (max-width:991.98px){.numbers .counters{margin-top:60px}}.numbers .counters__item{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column}.numbers .counters__count{color:#1a1b1e;margin-bottom:10px}.numbers .counters .subtitle{-ms-flex-order:2;order:2;color:#fe4c1c}.numbers .counters .subtitle:after,.numbers .counters .subtitle:before{background-color:#fe4c1c}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
