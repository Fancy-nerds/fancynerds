.counters {
  position: relative;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  height: 0;
  padding: 65px 0;
  width: 100%;
  z-index: 33;
}

@media (max-width: 991.98px) {
  .counters {
    -webkit-transform: none;
    transform: none;
    padding: 40px 0;
    height: auto;
  }
}

.counters .container {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  position: relative;
}

.counters .container .row {
  width: 100%;
}

.counters__inner {
  position: relative;
  padding: 83px 0;
  width: 100%;
}

@media (max-width: 991.98px) {
  .counters__inner {
    padding: 70px 0;
  }
}

@media (max-width: 575.98px) {
  .counters__inner {
    padding: 55px 0;
  }
}

.counters__bg {
  background: url("../../../assets/images/counters_bg.jpg.webp") no-repeat 0 0/cover;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  border-radius: 15px;
  -webkit-box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
  box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
}

.counters__bg img {
  border-radius: 15px;
  -webkit-box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
  box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
}

.counters__item {
  text-align: center;
}

.counters .subtitle {
  color: #ffd68e;
}

.counters .subtitle:before,
.counters .subtitle:after {
  background: #ffd68e;
}

.counters__count {
  font: 900 48px "RedHatDisplay", "Montserrat";
  color: #fff;
  position: relative;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
