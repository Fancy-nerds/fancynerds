.counters {
  position: relative;
  width: 100%;
  z-index: 5;
  /*@include media-breakpoint-down(md) {
    padding: 40px 0;
  }*/
}

.counters .container {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  position: relative;
}

.counters .container .row {
  width: 100%;
}

.counters__grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  -webkit-column-gap: 30px;
  -moz-column-gap: 30px;
  column-gap: 30px;
  row-gap: 30px;
}

@media (max-width: 991.98px) {
  .counters__grid {
    grid-template-columns: repeat(2, 1fr);
    max-width: 560px;
    width: 100%;
    margin: 0 auto;
  }
}

@media (max-width: 575.98px) {
  .counters__grid {
    grid-template-columns: 1fr;
  }
}

.counters__line {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 50%;
  background: #f0f6ff;
  /*@include media-breakpoint-down(md) {
      display: none;
    }*/
}

.counters__inner {
  position: relative;
  padding: 83px 0;
  width: 100%;
}

@media (max-width: 991.98px) {
  .counters__inner {
    padding: 70px 0;
  }
}

@media (max-width: 575.98px) {
  .counters__inner {
    padding: 55px 0;
  }
}

.counters__bg {
  background: url("../../../assets/images/counters_bg.jpg.webp") no-repeat 0 0/cover;
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  border-radius: 15px;
  -webkit-box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
  box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
}

.counters__bg img {
  border-radius: 15px;
  -webkit-box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
  box-shadow: 23px 23px 87px 0 rgba(254, 76, 28, 0.3);
}

.counters__item {
  text-align: center;
}

.counters .subtitle {
  color: #ffd68e;
}

.counters .subtitle:before,
.counters .subtitle:after {
  background: #ffd68e;
}

.counters__count {
  font: 900 48px "RedHatDisplay", "Montserrat";
  color: #fff;
  position: relative;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
