.services{position:relative;padding:110px 0}@media (max-width:991.98px){.services{padding:70px 0}}.services .heading{margin-bottom:20px}.services__circles{position:absolute;top:0;left:0;width:100%;height:100%;padding:30px 0}@media (max-width:575.98px){.services__circles{display:none}}.services__circles img,.services__circles picture{width:100%;height:100%}.services__circles img{-o-object-fit:none;object-fit:none}.services__grid{display:grid;grid-template-columns:repeat(3,1fr);column-gap:30px}@media (max-width:1199.98px){.services__grid{row-gap:48px}}@media (max-width:991.98px){.services__grid{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap;column-gap:0;row-gap:0;margin:-24px -15px}}.services__col{display:-ms-flexbox;display:flex}@media (max-width:991.98px){.services__col{padding:24px 15px;width:50%}}@media (max-width:575.98px){.services__col{width:100%}}.services__item{width:100%;position:relative;box-sizing:border-box;padding:50px 45px;transition:box-shadow,background-color .3s,.3s,.3s;will-change:box-shadow,-webkit-box-shadow,background-color;cursor:pointer;text-align:center;z-index:3;border-radius:15px}@media (max-width:1199.98px){.services__item{box-shadow:7px 5px 30px rgba(42,67,113,.15);border-radius:15px;background-color:#fff}}@media (max-width:991.98px){.services__item{padding:30px 30px 40px}}.services__item:hover{box-shadow:7px 5px 30px rgba(42,67,113,.15);background-color:#fff}.services__item:hover:after,.services__item:hover:before{opacity:1;visibility:visible}@media (min-width:1200px){.services__item:hover .services__action{opacity:1;visibility:visible;bottom:-23px}}.services__item:after,.services__item:before{position:absolute;content:"";opacity:0;visibility:hidden;transition:opacity .3s;will-change:opacity;z-index:1}@media (max-width:1199.98px){.services__item:after,.services__item:before{opacity:1;visibility:visible}}.services__item:before{top:0;left:0;width:105px;height:41px;background-image:url(../../../assets/images/services-item-before.png.webp);border-top-left-radius:15px}.services__item:after,.services__item:before{background-repeat:no-repeat;background-size:cover}.services__item:after{bottom:0;right:0;width:157px;height:68px;background-image:url(../../../assets/images/services-item-after.png.webp);border-bottom-right-radius:15px}.services__item p{margin:0}.services__action{position:absolute;bottom:-25px;left:0;z-index:2;transition:bottom,visibility,opacity .3s,.3s,.3s;will-change:bottom,visibility,opacity;text-align:center;width:100%}@media (min-width:1200px){.services__action{opacity:0;visibility:hidden;bottom:-43px}}.services__image{margin-bottom:30px;height:156px;text-align:center}@media (max-width:991.98px){.services__image{margin-bottom:25px}}.services__title{margin-bottom:16px;color:#1a1b1e;font-family:RedHatDisplay,Montserrat;font-size:22px;font-weight:700}.services__arrow{position:absolute;top:175px;left:0;z-index:0;width:100%}@media (max-width:1199.98px){.services__arrow{display:none}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
