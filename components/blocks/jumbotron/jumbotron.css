.jumbotron{padding:114px 133px 80px 93px;position:relative}@media (max-width:1499.98px){.jumbotron{padding:110px 60px 70px}}@media (max-width:1299.98px){.jumbotron{padding:100px 70px 60px}}@media (max-width:1199.98px){.jumbotron{padding:100px 0 60px}}@media (max-width:991.98px){.jumbotron{padding:90px 0 50px}}@media (max-width:575.98px){.jumbotron{padding:80px 0 50px}}.jumbotron_image,.jumbotron_typographic{position:relative}.jumbotron_image{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;z-index:2}@media (max-width:991.98px){.jumbotron_image{max-width:650px}}.jumbotron_image--way{position:absolute;right:28px;top:-26px;width:299px;height:421px;transform:rotate(55deg);z-index:1}.jumbotron_image--way img{width:100%;height:100%}.jumbotron_image--arrow{position:absolute;right:137px;top:-49px;width:41px;height:46px;z-index:1;transform:rotate(-29deg)}.jumbotron_image--arrow img{width:100%;height:100%}.jumbotron_content{z-index:3;position:relative;max-width:560px}@media (max-width:1199.98px){.jumbotron_content{text-align:center;margin-bottom:30px}}@media (max-width:991.98px){.jumbotron_content .title{font-size:46px;line-height:54px}}@media (max-width:575.98px){.jumbotron_content .title{font-size:34px;line-height:46px}}.jumbotron_content .description{margin:0}.jumbotron_content .subtitle{font-size:1rem;letter-spacing:normal}.jumbotron_content .button{margin-top:50px}@media (max-width:575.98px){.jumbotron_content .button{margin-top:40px}}.jumbotron__grid{display:grid;grid-template-columns:55% 45%;column-gap:64px;-ms-flex-align:center;align-items:center}@media (max-width:1499.98px){.jumbotron__grid{column-gap:40px}}@media (max-width:1199.98px){.jumbotron__grid{display:-ms-flexbox;display:flex;-ms-flex-direction:column-reverse;flex-direction:column-reverse;column-gap:0}}.jumbotron__col:first-child{justify-self:flex-end}.jumbotron__bg{position:absolute;content:"";width:100%;left:0;top:0}@media (max-width:575.98px){.jumbotron__bg{display:none}}.jumbotron__bg img,.jumbotron__bg picture{position:absolute;top:0;max-width:50%}.jumbotron__bg img:last-of-type,.jumbotron__bg picture:last-of-type{right:0}.jumbotron__bg picture img{position:static;max-width:100%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
