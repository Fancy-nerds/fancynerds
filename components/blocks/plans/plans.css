.plans{padding:120px 0 140px}@media (max-width:1199.98px){.plans{padding:90px 0 110px}}@media (max-width:991.98px){.plans{padding:80px 0 90px}}@media (max-width:575.98px){.plans{padding:70px 0 80px}}.plans .heading{width:100%;margin:0 auto 40px}.plans__grid{display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-pack:center;justify-content:center;margin:-25px -15px}.plans__col{padding:25px 15px;width:33.33%}@media (max-width:1199.98px){.plans__col{width:50%}}@media (max-width:767.98px){.plans__col{width:100%}}.plans__item{position:relative;box-sizing:border-box;padding:50px 45px 75px;transition:transform .3s;will-change:transform;cursor:pointer;text-align:center;z-index:11;box-shadow:7px 5px 30px rgba(42,67,113,.1);border-radius:15px;background-color:#fff}.plans__item:before{position:absolute;content:"";top:0;left:50%;transform:translateX(-50%);z-index:-1}.plans__item:hover{transform:translateY(-15px)}@media screen and (max-width:1024px){.plans__item:hover{transform:none}}@media screen and (min-width:1024px){.plans__item--filled{background-color:#ff4b38;background-image:linear-gradient(90deg,#ff403e,#ff811b 160%)}}@media screen and (min-width:1024px){.plans__item--filled .plans__package,.plans__item--filled .plans__point,.plans__item--filled .plans__price{color:#fff}}.plans__item--filled .plans__before_bg{fill:hsla(0,0%,100%,.1)}.plans__item--standard .plans__before{width:213px;height:105px}.plans__item--standard .plans__before svg{transform:rotate(10deg)}.plans__item--standard:after{position:absolute;content:"";width:130px;height:109px;bottom:0;left:0;background-image:url(../../../assets/images/standard_after.png.webp) no-repeat 0 0/cover;border-bottom-left-radius:15px;z-index:-1}.plans__item--standard .plans__label{color:#fff;background-color:#00c3ff}.plans__item--economy .plans__before{width:213px;height:122px}.plans__item--economy .plans__before svg{transform:rotate(-160deg)}.plans__item--economy:after{position:absolute;content:"";width:100%;height:199px;bottom:0;left:0;background-image:url(../../../assets/images/economy_after.png.webp) no-repeat 0 0/cover;z-index:-1}.plans__item--economy .plans__label{color:#fe4c1c}@media screen and (max-width:1024px){.plans__item--economy .plans__label{color:#fff;background-color:#fe4c1c}}.plans__item--executive .plans__before svg{transform:rotate(-300deg)}.plans__item--executive .plans__label{background-color:#0160e7;color:#fff}.plans__action{position:absolute;bottom:-25px;left:0;z-index:3;text-align:center;width:100%}.plans__before{height:110px;width:200px;overflow:hidden;position:absolute;top:0;left:50%;transform:rotate(180deg) translateX(50%);z-index:-1}.plans__before_bg{fill:#f0f6ff}.plans__before svg{transform:rotate(-180deg)}.plans__label{position:absolute;left:0;top:30px;padding:0 20px;height:34px;box-shadow:5px 3px 13px rgba(42,67,113,.15);border-radius:0 17px 17px 0;background-color:#fff;font-family:RedHatDisplay,Montserrat;font-size:13px;font-weight:700;line-height:34px;text-transform:uppercase;text-align:center}.plans__image{margin-bottom:20px;height:110px;text-align:center}@media screen and (max-width:1024px){.plans__image img{margin:0 auto}}.plans__price{color:#1a1b1e;font-family:RedHatDisplay,Montserrat;font-size:42px;font-weight:700;line-height:50px;margin-bottom:5px}.plans__price sup{font-size:24px;margin-left:-15px}.plans__package{color:#a5b7d2;font-size:1rem;font-weight:500;margin-bottom:40px}.plans__points{position:relative;padding-top:32px;box-sizing:border-box}.plans__points:before{position:absolute;content:"";top:0;left:0;height:1px;width:100%;background-color:#e6e6e6}.plans__point{font-size:1rem;color:#606060;margin-bottom:20px}.plans__point:last-child{margin-bottom:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
