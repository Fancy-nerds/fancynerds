.steps {
  padding: 60px 15px;
}

@media (max-width: 1199.98px) {
  .steps {
    padding: 40px 15px;
  }
}

@media (max-width: 991.98px) {
  .steps {
    padding: 30px 0;
  }
}

.steps__container {
  max-width: 1890px;
  margin: 0 auto;
  padding: 0 15px;
}

.steps__grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  row-gap: 30px;
  -webkit-column-gap: 30px;
  -moz-column-gap: 30px;
  column-gap: 30px;
}

@media (max-width: 1299.98px) {
  .steps__grid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 1199.98px) {
  .steps__grid {
    row-gap: 20px;
    -webkit-column-gap: 20px;
    -moz-column-gap: 20px;
    column-gap: 20px;
  }
}

@media (max-width: 767.98px) {
  .steps__grid {
    grid-template-columns: 1fr;
  }
}

.steps__col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.steps__item {
  background: #fff;
  -webkit-box-shadow: 7px 5px 30px rgba(42, 67, 113, 0.15);
  box-shadow: 7px 5px 30px rgba(42, 67, 113, 0.15);
  border-radius: 15px;
  padding: 35px;
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  cursor: pointer;
  z-index: 11;
  -webkit-transition: -webkit-transform 0.3s;
  transition: -webkit-transform 0.3s;
  transition: transform 0.3s;
  transition: transform 0.3s, -webkit-transform 0.3s;
  width: 100%;
}

@media (max-width: 1499.98px) {
  .steps__item {
    padding: 30px 25px;
  }
}

@media (max-width: 575.98px) {
  .steps__item {
    padding: 25px 25px;
  }
}

.steps__item:hover {
  -webkit-transform: translateY(-20px);
  transform: translateY(-20px);
}

@media (max-width: 1199.98px) {
  .steps__item:hover {
    -webkit-transform: none;
    transform: none;
  }
}

.steps__item:hover .steps__overlay {
  opacity: 1;
}

.steps__item:hover .steps__count {
  opacity: 0.2;
}

.steps__item:hover .steps__title,
.steps__item:hover .paragraph,
.steps__item:hover .steps__text {
  color: #fff;
}

.steps__item:hover .steps__icon {
  -webkit-box-shadow: 5px 3px 13px rgba(42, 67, 113, 0.15);
  box-shadow: 5px 3px 13px rgba(42, 67, 113, 0.15);
  background: none;
}

.steps__item:hover .steps__icon [class^="flaticon-"]:before,
.steps__item:hover .steps__icon [class^="flaticon-"]:after,
.steps__item:hover .steps__icon span {
  color: #00c3ff;
}

.steps__item:hover .steps__icon_overlay {
  opacity: 1;
}

.steps__icon {
  background: linear-gradient(-55deg, #04dbf1 0%, #0039e4 100%) #0160e7;
  -webkit-box-shadow: 7px 5px 20px rgba(2, 156, 236, 0.3);
  box-shadow: 7px 5px 20px rgba(2, 156, 236, 0.3);
  width: 60px;
  height: 60px;
  border-radius: 50%;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 30px;
  transition: box-shadow, background-color, -webkit-box-shadow 0.3s, 0.3s, 0.3s;
  will-change: box-shadow, background-color, -webkit-box-shadow;
  position: relative;
}

.steps__icon span {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  height: 100%;
  font-weight: 700;
  color: #fff;
}

.steps__icon [class^="flaticon-"]:before,
.steps__icon [class^="flaticon-"]:after {
  color: #fff;
  display: inline-block;
  -webkit-transition: color 0.3s;
  transition: color 0.3s;
  will-change: color;
  font-size: 25px;
}

.steps__icon_overlay {
  background: #fff;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  will-change: opacity;
  border-radius: 50%;
}

.steps__title {
  font: 700 20px/30px "RedHatDisplay", "Montserrat";
  color: #1a1b1e;
  margin-bottom: 5px;
  -webkit-transition: color 0.3s;
  transition: color 0.3s;
  will-change: color;
  z-index: 1;
}

.steps__text {
  color: #606060;
  line-height: 30px;
  -webkit-transition: color 0.3s;
  transition: color 0.3s;
  will-change: color;
  z-index: 1;
}

.steps__count {
  font: 900 72px/50px "RedHatDisplay", "Montserrat";
  position: absolute;
  content: "";
  right: 20px;
  bottom: 0;
  color: #f0f6ff;
  z-index: -1;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  will-change: opacity;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.steps__overlay {
  background: linear-gradient(to left, #04dbf1 0%, #0039e4 100%);
  position: absolute;
  top: 0;
  left: 0;
  background: #00c3ff;
  opacity: 0;
  width: 100%;
  height: 100%;
  z-index: -1;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  will-change: opacity;
  border-radius: 15px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
