.article-label {
  font: 700 12px/16px "RedHatDisplay", "Montserrat";
  background: #fe4c1c;
  position: relative;
  display: inline-block;
  color: #fff;
  text-transform: uppercase;
  letter-spacing: 0.6px;
  padding: 6px 9px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border-radius: 3px;
  text-align: center;
  margin-right: 15px;
}

.article-label:last-child {
  margin-right: 0;
}

.article-state {
  margin-bottom: 15px;
}

.article-state__item {
  font: 500 13px "RedHatDisplay", "Montserrat";
  color: #a5b7d2;
  display: inline-block;
  margin-right: 4px;
}

.article-state__item i {
  margin-right: 4px;
}

.article-state__item i:before {
  font-size: 12px;
}

.article-state__item:last-child {
  margin-right: 0;
}

.card {
  background: #fff;
  position: relative;
  -webkit-box-shadow: 7px 5px 30px rgba(42, 67, 113, 0.1);
  box-shadow: 7px 5px 30px rgba(42, 67, 113, 0.1);
  border-radius: 15px;
}

@media screen and (max-width: 768px) {
  .card {
    margin-bottom: 30px;
  }
}

.card__image {
  height: 280px;
}

.card__image picture {
  height: 100%;
}

.card__image img {
  -o-object-fit: cover;
  object-fit: cover;
  height: 100%;
  width: 100%;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
}

.card__content {
  padding: 30px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.card__title {
  font: 700 24px/36px "RedHatDisplay", "Montserrat";
  color: #1a1b1e;
  margin-bottom: 10px;
}

.card .article-label {
  position: absolute;
  top: 30px;
  left: 30px;
}

.ceo {
  background: linear-gradient(-55deg, #04dbf1 0%, #0039e4 100%) #00c3ff;
  -webkit-box-shadow: 25px 17px 65px rgba(2, 156, 236, 0.3);
  box-shadow: 25px 17px 65px rgba(2, 156, 236, 0.3);
  border-radius: 15px;
  padding: 30px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.ceo__image {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  margin-bottom: 30px;
}

.ceo__image img {
  width: 100%;
  height: 100%;
}

.ceo__name {
  font: 700 20px/30px "RedHatDisplay", "Montserrat";
  color: #fff;
  margin-bottom: 20px;
}

.ceo__description {
  color: #fff;
  font-size: 14px;
  font-weight: 400;
  line-height: 28px;
  margin-bottom: 10px;
  text-align: center;
}

.author {
  background: #fff;
  -webkit-box-shadow: 7px 5px 30px rgba(42, 67, 113, 0.15);
  box-shadow: 7px 5px 30px rgba(42, 67, 113, 0.15);
  border-radius: 15px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.author__image {
  width: 250px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.author__content {
  padding: 50px 50px 20px;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.author__work {
  font: 500 16px "RedHatDisplay", "Montserrat";
  color: #fe4c1c;
  margin-bottom: 10px;
}

.author__name {
  font: 700 18px "RedHatDisplay", "Montserrat";
  color: #1a1b1e;
  margin-bottom: 10px;
}

.author__text {
  color: #606060;
  font-size: 16px;
  font-weight: 400;
  line-height: 30px;
  margin-bottom: 10px;
}

.author__social {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.author__social--icon {
  width: 20px;
  height: 20px;
  margin-right: 20px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.author__social--icon svg path {
  -webkit-transition: all linear 0.4s;
  transition: all linear 0.4s;
}

.author__social--icon:last-child {
  margin-right: 0;
}

.author__social--icon:hover svg path {
  fill: #fe4c1c;
}

.comments__count {
  color: #a5b7d2;
  font-size: 30px;
}

.comments__form {
  background: #f0f6ff;
  position: relative;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  border-radius: 15px;
  padding: 50px;
}

.comment {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  position: relative;
  padding-bottom: 20px;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.comment:not(.comment:first-child) {
  margin-top: 30px;
}

.comment:last-child {
  border: none;
}

.comment__reply {
  padding-left: 110px;
}

.comment__link {
  font: 700 13px "RedHatDisplay", "Montserrat";
  position: absolute;
  content: '';
  top: 5px;
  right: 0;
  color: #a5b7d2;
  text-transform: uppercase;
  -webkit-transition: all linear 0.4s;
  transition: all linear 0.4s;
}

.comment__link:hover {
  color: #fe4c1c;
}

.comment__image {
  width: 80px;
  height: 80px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  margin-right: 30px;
}

.comment__image img {
  width: 100%;
  height: 100%;
  border-radius: 50%;
}

.comment__name {
  font: 700 18px "RedHatDisplay", "Montserrat";
  color: #1a1b1e;
  margin-bottom: 10px;
}

.comment__date {
  font: 700 12px "RedHatDisplay", "Montserrat";
  color: #a5b7d2;
  text-transform: uppercase;
  letter-spacing: 0.6px;
  margin-bottom: 10px;
}

.comment__text {
  color: #606060;
  font-size: 16px;
  font-weight: 400;
  line-height: 30px;
}

.article h1.title {
  font-size: 42px;
  color: #fff;
  margin-bottom: 10px;
}

.article__hero {
  min-height: 600px;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
  position: relative;
  padding: 100px 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.article__hero:after {
  background: rgba(34, 35, 40, 0.5);
  position: absolute;
  content: '';
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

.article__hero .article-state__item {
  color: #fff;
  margin-right: 15px;
}

.article__heading {
  position: relative;
  z-index: 3;
}

.article .article-label {
  margin-bottom: 30px;
}

.article__content {
  padding: 70px 0;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.article__main {
  width: 870px;
  margin-right: 30px;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.article__sidebar {
  width: 270px;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.article p {
  margin-bottom: 30px;
  color: #606060;
  font-size: 16px;
  font-weight: 400;
  line-height: 30px;
}

.article p a {
  color: #fe4c1c;
  -webkit-transition: all linear 0.4s;
  transition: all linear 0.4s;
  border-bottom: 1px solid transparent;
}

.article p a:hover {
  border-color: #fe4c1c;
}

.article h2 {
  font: 900 30px "RedHatDisplay", "Montserrat";
  margin-bottom: 30px;
  color: #1a1b1e;
}

.article .blockquote {
  position: relative;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  padding-left: 30px;
  margin: 40px 0;
  width: 82%;
}

@media screen and (max-width: 768px) {
  .article .blockquote {
    width: 100%;
  }
}

.article .blockquote:before {
  background: #fe4c1c;
  position: absolute;
  top: 0;
  left: 0;
  content: "";
  width: 3px;
  height: 100%;
  border-radius: 2px;
}

.article .blockquote__text {
  font: 500 24px/42px "RedHatDisplay", "Montserrat";
  color: #1a1b1e;
  margin-bottom: 20px;
}

.article .blockquote__author {
  font: 700 12px "RedHatDisplay", "Montserrat";
  color: #a5b7d2;
  text-transform: uppercase;
  letter-spacing: 0.7px;
  position: relative;
  padding-left: 10px;
}

.article .blockquote__author:before {
  position: absolute;
  content: '-';
  left: 0;
  top: 50%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}

.article .gallery {
  margin: 40px 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

.article .related-posts {
  margin-top: 100px;
}

.article .comments {
  margin-top: 100px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
