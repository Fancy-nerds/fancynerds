@charset "UTF-8";

@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;

500;700;900&display=swap");
html,
body {
  font: 16px "RedHatText", "Montserrat", Arial, sans-serif;
  background: #fff;
  margin: 0 !important;
  padding: 0;
  overflow-x: hidden;
}

html {
  min-height: 100vh;
  height: 100%;
}

a {
  text-decoration: none;
  color: #1a1b1e;
}

a:hover,
a:active {
  outline: 0;
}

a:hover,
a:focus,
a:active {
  color: #fff;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
li {
  margin: 0;
  padding: 0;
}

li {
  list-style: none;
}

input,
button,
textarea {
  border: none;
  outline: none;
}

textarea {
  resize: vertical;
}

picture {
  display: block;
}

.image--rounded img {
  border-radius: 15px;
}

.fixed {
  overflow: hidden;
}

.container {
  max-width: 1170px;
  margin: 0 auto;
  width: 100%;
  position: relative;
}

.container--fluid {
  max-width: none;
}

.container--fluid .row {
  margin: 0;
}

@media screen and (max-width: 768px) {
  .container {
    padding: 0 20px;
    box-sizing: border-box;
  }
}



@font-face {
  font-family: "RedHatDisplay";
  src: url("../fonts/RedHatDisplay.eot");
  src: url("../fonts/RedHatDisplay.eot?#iefix") format("embedded-opentype"), url("../fonts/RedHatDisplay.woff") format("woff"), url("../fonts/RedHatDisplay.woff2") format("woff2"), url("../fonts/RedHatDisplay.ttf") format("truetype");
  font-style: normal;
  font-weight: normal;
  font-display: swap;
}

@font-face {
  font-family: "RedHatDisplay";
  src: url("../fonts/RedHatDisplay-Medium.eot");
  src: url("../fonts/RedHatDisplay-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/RedHatDisplay-Medium.woff") format("woff"), url("../fonts/RedHatDisplay-Medium.woff2") format("woff2"), url("../fonts/RedHatDisplay-Medium.ttf") format("truetype");
  font-style: normal;
  font-weight: 500;
  font-display: swap;
}

@font-face {
  font-family: "RedHatDisplay";
  src: url("../fonts/RedHatDisplay-Bold.eot");
  src: url("../fonts/RedHatDisplay-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/RedHatDisplay-Bold.woff") format("woff"), url("../fonts/RedHatDisplay-Bold.woff2") format("woff2"), url("../fonts/RedHatDisplay-Bold.ttf") format("truetype");
  font-style: normal;
  font-weight: 700;
  font-display: swap;
}

@font-face {
  font-family: "RedHatDisplay";
  src: url("../fonts/RedHatDisplay-Black.eot");
  src: url("../fonts/RedHatDisplay-Black.eot?#iefix") format("embedded-opentype"), url("../fonts/RedHatDisplay-Black.woff") format("woff"), url("../fonts/RedHatDisplay-Black.woff2") format("woff2"), url("../fonts/RedHatDisplay-Black.ttf") format("truetype");
  font-style: normal;
  font-weight: 900;
  font-display: swap;
}

@font-face {
  font-family: "RedHatText";
  src: url("../fonts/RedHatText.eot");
  src: url("../fonts/RedHatText.eot?#iefix") format("embedded-opentype"), url("../fonts/RedHatText.woff") format("woff"), url("../fonts/RedHatText.woff2") format("woff2"), url("../fonts/RedHatText.ttf") format("truetype");
  font-style: normal;
  font-weight: normal;
  font-display: swap;
}

@font-face {
  font-family: "RedHatText";
  src: url("../fonts/RedHatText-Medium.eot");
  src: url("../fonts/RedHatText-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/RedHatText-Medium.woff") format("woff"), url("../fonts/RedHatText-Medium.woff2") format("woff2"), url("../fonts/RedHatText-Medium.ttf") format("truetype");
  font-style: normal;
  font-weight: 500;
  font-display: swap;
}

@font-face {
  font-family: "RedHatText";
  src: url("../fonts/RedHatText-Bold.eot");
  src: url("../fonts/RedHatText-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/RedHatText-Bold.woff") format("woff"), url("../fonts/RedHatText-Bold.woff2") format("woff2"), url("../fonts/RedHatText-Bold.ttf") format("truetype");
  font-style: normal;
  font-weight: 700;
  font-display: swap;
}

@font-face {
  font-family: "Flaticon";
  src: url("../fonts/Flaticon.eot");
  src: url("../fonts/Flaticon.eot?#iefix") format("embedded-opentype"), url("../fonts/Flaticon.woff2") format("woff2"), url("../fonts/Flaticon.woff") format("woff"), url("../fonts/Flaticon.ttf") format("truetype"), url("../fonts/Flaticon.svg#Flaticon") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}

@media screen and (-webkit-min-device-pixel-ratio: 0) {
@font-face {
    font-family: "Flaticon";
    src: url("../fonts/Flaticon.svg#Flaticon") format("svg");
}
}

[class^="flaticon-"]:before,
[class^="flaticon-"]:after {
  font: normal 14px "Flaticon";
  margin-left: 0px;
}

.flaticon-search:before {
  content: "\f106";
}

.flaticon-supermarket:before {
  content: "\f107";
}

.flaticon-close:before {
  content: "\f11c";
}

.flaticon-arrow-pointing-to-up:before {
  content: "\f13c";
}

.flaticon-arrow-point-to-right:before {
  content: "\f100";
}

.flaticon-right-arrow:before {
  content: "\f101";
}

.flaticon-placeholder-filled-point:before {
  content: "\f102";
}

.flaticon-placeholder:before {
  content: "\f103";
}

.flaticon-phone:before {
  content: "\f104";
}

.flaticon-clock:before {
  content: "\f105";
}

.flaticon-search:before {
  content: "\f106";
}

.flaticon-supermarket:before {
  content: "\f107";
}

.flaticon-24h:before {
  content: "\f108";
}

.flaticon-check:before {
  content: "\f109";
}

.flaticon-share:before {
  content: "\f10a";
}

.flaticon-share-1:before {
  content: "\f10b";
}

.flaticon-arrowhead-thin-outline-to-the-left:before {
  content: "\f10c";
}

.flaticon-arrow-down-sign-to-navigate:before {
  content: "\f10d";
}

.flaticon-navigate-up-arrow:before {
  content: "\f10e";
}

.flaticon-chain:before {
  content: "\f10f";
}

.flaticon-heart:before {
  content: "\f110";
}

.flaticon-e-commerce-like-heart:before {
  content: "\f111";
}

.flaticon-like:before {
  content: "\f112";
}

.flaticon-heart-1:before {
  content: "\f113";
}

.flaticon-quote:before {
  content: "\f114";
}

.flaticon-quotation:before {
  content: "\f115";
}

.flaticon-writer:before {
  content: "\f116";
}

.flaticon-add:before {
  content: "\f117";
}

.flaticon-add-1:before {
  content: "\f118";
}

.flaticon-add-2:before {
  content: "\f119";
}

.flaticon-delete:before {
  content: "\f11a";
}

.flaticon-close-cross:before {
  content: "\f11b";
}

.flaticon-close:before {
  content: "\f11c";
}

.flaticon-close-button:before {
  content: "\f11d";
}

.flaticon-eye-open:before {
  content: "\f11e";
}

.flaticon-view:before {
  content: "\f11f";
}

.flaticon-left-arrow:before {
  content: "\f120";
}

.flaticon-right-arrow-1:before {
  content: "\f121";
}

.flaticon-left-arrow-1:before {
  content: "\f122";
}

.flaticon-arrow-pointing-to-right:before {
  content: "\f123";
}

.flaticon-next:before {
  content: "\f124";
}

.flaticon-keyboard-right-arrow-button:before {
  content: "\f125";
}

.flaticon-down-arrow:before {
  content: "\f126";
}

.flaticon-cart:before {
  content: "\f127";
}

.flaticon-graphic:before {
  content: "\f128";
}

.flaticon-portfolio:before {
  content: "\f129";
}

.flaticon-rocket:before {
  content: "\f12a";
}

.flaticon-aim:before {
  content: "\f12b";
}

.flaticon-system:before {
  content: "\f12c";
}

.flaticon-report:before {
  content: "\f12d";
}

.flaticon-globe:before {
  content: "\f12e";
}

.flaticon-startup:before {
  content: "\f12f";
}

.flaticon-internet:before {
  content: "\f130";
}

.flaticon-growth:before {
  content: "\f131";
}

.flaticon-pie-chart:before {
  content: "\f132";
}

.flaticon-pie-chart-1:before {
  content: "\f133";
}

.flaticon-document:before {
  content: "\f134";
}

.flaticon-search-1:before {
  content: "\f135";
}

.flaticon-coding:before {
  content: "\f136";
}

.flaticon-pie-chart-2:before {
  content: "\f137";
}

.flaticon-cloud-computing:before {
  content: "\f138";
}

.flaticon-pinterest:before {
  content: "\f139";
}

.flaticon-arrow-pointing-to-left:before {
  content: "\f13a";
}

.flaticon-arrow-pointing-to-down:before {
  content: "\f13b";
}

.flaticon-arrow-pointing-to-up:before {
  content: "\f13c";
}

.flaticon-world:before {
  content: "\f13d";
}

.flaticon-note:before {
  content: "\f13e";
}

.flaticon-viber:before {
  content: "\f13f";
}

.flaticon-star:before {
  content: "\f140";
}

.flaticon-phone-1:before {
  content: "\f141";
}

.flaticon-envelope:before {
  content: "\f142";
}

.flaticon-cart-1:before {
  content: "\f143";
}

.flaticon-user:before {
  content: "\f144";
}

.flaticon-send:before {
  content: "\f145";
}

.flaticon-analytics:before {
  content: "\f146";
}

.flaticon-chart:before {
  content: "\f147";
}

.flaticon-chat:before {
  content: "\f148";
}

.flaticon-link:before {
  content: "\f149";
}

.flaticon-heart-2:before {
  content: "\f14a";
}

.flaticon-info:before {
  content: "\f14b";
}

.flaticon-close-1:before {
  content: "\f14c";
}

.flaticon-check-1:before {
  content: "\f14d";
}

.flaticon-check-2:before {
  content: "\f14e";
}

.flaticon-exclamation:before {
  content: "\f14f";
}

.flaticon-danger:before {
  content: "\f150";
}

.flaticon-facebook-logo:before {
  content: "\f151";
}

.flaticon-facebook-letter-logo:before {
  content: "\f152";
}

.flaticon-twitter:before {
  content: "\f153";
}

.flaticon-twitter-black-shape:before {
  content: "\f154";
}

.flaticon-twitter-social-logotype:before {
  content: "\f155";
}

.flaticon-instagram:before {
  content: "\f156";
}

.flaticon-instagram-logo:before {
  content: "\f157";
}

.flaticon-instagram-1:before {
  content: "\f158";
}

.flaticon-instagram-2:before {
  content: "\f159";
}

.flaticon-pinterest-letter-logo:before {
  content: "\f15a";
}

.flaticon-pinterest-1:before {
  content: "\f15b";
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

.col {
  padding: 0 15px;
  box-sizing: border-box;
}

.col-right {
  text-align: right;
}

.col-16 {
  width: 16.66%;
}

.col-20 {
  width: 20%;
}

.col-25 {
  width: 25%;
}

.col-33 {
  width: 33.33%;
}

.col-40 {
  width: 40%;
}

.col-46 {
  width: 46%;
}

.col-50 {
  width: 50%;
}

.col-54 {
  width: 54%;
}

.col-60 {
  width: 60%;
}

.col-65 {
  width: 65%;
}

.col-66 {
  width: 66.66%;
}

.col-75 {
  width: 75%;
}

.col-80 {
  width: 80%;
}

.col-100 {
  width: 100%;
}

@media screen and (max-width: 768px) {
  .row {
    margin-left: -10px;
    margin-right: -10px;
  }

  .col {
    width: 100%;
    padding: 0 10px;
  }

  .col-mobile-40 {
    width: 40%;
  }

  .col-mobile-50 {
    width: 50%;
  }

  .col-mobile-60 {
    width: 60%;
  }

  .col-mobile-100 {
    width: 100%;
  }
}

.button {
  font: 700 16px "RedHatDisplay", Arial, sans-serif;
  color: #fff;
  border-radius: 25px;
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  padding: 15px 30px;
}

.button--small {
  padding: 14px 25px;
  font-size: 0.875em;
  border-radius: 23px;
}

.button--big {
  padding: 18px 40px;
  border-radius: 28px;
}

.button--image {
  padding-left: 28px;
  padding-right: 58px;
  overflow: hidden;
}

.button--image.button--small {
  padding-left: 30px;
  padding-right: 50px;
}

.button--image.button--small span {
  width: 36px;
  height: 36px;
}

.button--image.button--small span [class^="flaticon-"]:before,
.button--image.button--small span [class^="flaticon-"]:after {
  font-size: 15px;
}

.button--image.button--big {
  padding-right: 65px;
}

.button--image.button--big span {
  width: 46px;
  height: 46px;
}

.button--image span {
  background: #fff;
  position: absolute;
  content: '';
  width: 40px;
  height: 40px;
  border-radius: 50%;
  top: 5px;
  right: 5px;
  display: flex;
  align-items: center;
  justify-content: center;
}

.button--image span [class^="flaticon-"]:before,
.button--image span [class^="flaticon-"]:after {
  font-size: 18px;
}

.button--image:before {
  background: rgba(255, 255, 255, 0.8);
  position: absolute;
  content: "";
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 0;
  transition: all 0.5s;
  opacity: 1;
  transform: translate(-105%, 0);
}

.button--image:hover:before {
  opacity: 0;
  transform: translate(0, 0);
}

.button--blue {
  background: #00c3ff;
  box-shadow: 7px 5px 18px rgba(0, 195, 255, 0.3);
}

.button--blue.button--image span i {
  color: #00c3ff;
}

.button--blue-dark {
  background: #0160e7;
  box-shadow: 10px 7px 20px rgba(1, 96, 231, 0.3);
}

.button--blue-dark.button--image span i {
  color: #0160e7;
}

.button--orange {
  background: #fe4c1c;
  box-shadow: 10px 7px 20px rgba(254, 76, 28, 0.3);
}

.button--orange.button--image span i {
  color: #fe4c1c;
}

.button--orange-revert {
  background: #fff;
  color: #fe4c1c;
  box-shadow: 5px 3px 13px rgba(42, 67, 113, 0.15);
}

.button--orange-revert.button--image span {
  background: #fe4c1c;
}

.button--orange-revert.button--image span i {
  color: #fff;
}

.button--orange-revert:hover {
  color: #fe4c1c;
}

.button--rounded {
  background: #fe4c1c;
  border-radius: 50%;
  width: 36px;
  height: 36px;
}

.button--circle {
  background: #00c3ff;
  width: 60px;
  height: 60px;
  border-radius: 50%;
  box-shadow: 8px 6px 24px rgba(0, 195, 255, 0.3);
}

.button--play:before {
  background: url("../images/play.png.webp");
  position: absolute;
  content: '';
  left: 54%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 15px;
  height: 19px;
}

.button--play .circle {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border: 1px solid #00c3ff;
  z-index: 0;
  border-radius: 50%;
  box-sizing: border-box;
}

.button--play .circle-1 {
  -webkit-animation: circle-fade-before 2s infinite ease-in-out;
  animation: circle-fade-before 2s infinite ease-in-out;
}

.button--play .circle-2 {
  -webkit-animation: circle-fade-after 2s infinite ease-in-out;
  animation: circle-fade-after 2s infinite ease-in-out;
}

.heading {
  text-align: center;
  margin: 0 auto;
}

.title {
  font: 900 36px/48px "RedHatDisplay", Arial, sans-serif;
  color: #1a1b1e;
  margin-bottom: 20px;
}

h1.title {
  font-size: 56px;
  line-height: 72px;
}

@media screen and (max-width: 768px) {
  h1.title {
    font-size: 46px;
    line-height: 54px;
  }
}

.subtitle {
  font: 700 14px/18px "RedHatDisplay", Arial, sans-serif;
  color: #a5b7d2;
  letter-spacing: 0.7px;
  text-transform: uppercase;
  margin-bottom: 10px;
  position: relative;
  display: inline-block;
}

.subtitle__dot-before {
  padding-left: 20px;
}

.subtitle__dot-before:before {
  background: #a5b7d2;
  position: absolute;
  content: '';
  left: 0;
  top: 5px;
  width: 7px;
  height: 7px;
  border-radius: 50%;
}

.subtitle__dot-after {
  padding-right: 20px;
}

.subtitle__dot-after:after {
  background: #a5b7d2;
  position: absolute;
  content: '';
  right: 0;
  top: 5px;
  width: 7px;
  height: 7px;
  border-radius: 50%;
}

.description {
  font-size: 22px;
  line-height: 36px;
  font-weight: 400;
  color: #1a1b1e;
}

@media screen and (max-width: 768px) {
  .description {
    font-size: 18px;
    line-height: 27px;
  }
}

.paragraph {
  color: #606060;
  line-height: 30px;
  transition: all linear .3s;
  z-index: 1;
  font-size: 16px;
}

.paragraph .link {
  color: #00c3ff;
  transition: all linear .3s;
  border-bottom: 1px solid #00c3ff;
}

.paragraph .link:hover {
  color: #00c3ff;
  border-color: transparent;
}

.link {
  font: 400 16px "RedHatDisplay";
  color: #9ee8ff;
  transition: all linear .3s;
  border-bottom: 1px solid transparent;
}

.link:hover {
  color: #fff;
  border-color: #fff;
}

.site {
  background: #fff;
}

.blockquote__text {
  color: #1a1b1e;
  font-size: 20px;
  font-weight: 400;
  line-height: 36px;
  margin-bottom: 30px;
}

.blockquote__actions {
  display: flex;
  align-items: center;
}

.blockquote__photo {
  margin-right: 30px;
  border-radius: 50%;
  width: 80px;
  height: 80px;
  flex-shrink: 0;
}

.blockquote__photo img {
  width: 100%;
  height: 100%;
}

.blockquote__author {
  font: 700 18px/26px "RedHatDisplay";
  color: #1a1b1e;
}

.blockquote__work {
  font: 16px/26px "RedHatDisplay";
  color: #606060;
}

.header {
  background: #fff;
  box-shadow: 7px 5px 30px rgba(42, 67, 113, 0.15);
  padding: 0 40px;
  z-index: 111;
  position: relative;
}

.header__top {
  height: 50px;
  border-bottom: 1px solid rgba(0, 0, 0, 0.1);
  box-sizing: border-box;
}

.header__main {
  height: 110px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.header__actions {
  display: flex;
  align-items: center;
  justify-content: center;
}

.header__actions .button {
  margin-left: 20px;
}

@media screen and (max-width: 768px) {
  .header__actions .button {
    display: none;
  }
}

.header__flags {
  display: flex;
  align-items: center;
}

.header__flags .current-lang {
  display: none;
}

.header__flags .lang-item {
  margin-right: 15px;
  transition: all linear .4s;
}

.header__flags .lang-item:last-child {
  margin-right: 0;
}

.header__flags .lang-item:hover {
  opacity: .7;
}

.header__menu {
  height: 100%;
}

.header__menu_container {
  height: 100%;
}

@media screen and (max-width: 768px) {
  .header__menu {
    height: 100vh;
    position: absolute;
    top: 0;
    width: 310px;
    right: 0;
    background-color: #fff;
    padding: 35px;
    z-index: 9999;
    transform: translateX(100%);
    transition: all 0.3s linear;
  }
}

.header__menu.active {
  transform: translateX(0);
  position: fixed;
  padding-top: 50px;
}

.header__mobile-menu {
  background: #f0f6ff;
  width: 50px;
  height: 50px;
  line-height: 60px;
  text-align: center;
  padding: 0;
  border-radius: 50%;
  display: none;
}

@media screen and (max-width: 768px) {
  .header__mobile-menu {
    display: block;
  }
}

.header__mobile-menu svg,
.header__mobile-menu img {
  width: 20px;
  fill: #1a1b1e;
}

.header__overlay {
  height: 100vh;
  width: 100vw;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  position: fixed;
  background: rgba(0, 0, 0, 0.7);
  visibility: hidden;
  opacity: 0;
  transition: all 0.2s linear;
}

.header__overlay.active {
  visibility: visible;
  opacity: 1;
  z-index: 9998;
}

.header__close {
  width: 100%;
  text-align: right;
  display: none;
}

@media screen and (max-width: 768px) {
  .header__close {
    display: block;
  }
}

.menu {
  display: flex;
  align-items: center;
  height: 100%;
}

@media screen and (max-width: 768px) {
  .menu {
    flex-direction: column;
    height: auto;
    align-items: flex-start;
    z-index: 9999;
  }
}

.menu-item {
  font: 700 16px "RedHatDisplay", Arial, sans-serif;
  margin-right: 30px;
  position: relative;
  height: 100%;
  display: flex;
  align-items: center;
  transition: all 0.3s linear;
}

@media screen and (max-width: 768px) {
  .menu-item {
    margin-right: 0;
    margin-bottom: 10px;
    width: 100%;
    font-size: 14px;
  }
}

.menu-item:last-child {
  margin-right: 0;
}

.menu-item:before,
.menu-item:after {
  position: absolute;
  content: "";
  height: 5px;
  width: 0%;
  bottom: -3px;
  left: 0;
  background: #00c3ff;
  display: block;
  transition: all 0.3s linear;
  border-top-left-radius: 5px;
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 5px;
}

.menu-item:before {
  left: auto;
  right: 0;
  border-top-left-radius: 0;
  border-top-right-radius: 5px;
  border-bottom-right-radius: 5px;
  border-bottom-left-radius: 0;
}

@media screen and (max-width: 768px) {
  .menu-item:before {
    display: none;
  }
}

@media screen and (max-width: 768px) {
  .menu-item:after {
    border-radius: 3px;
    height: 1px;
    background-color: #e5e5e5;
    width: 100%;
    left: 0;
    right: auto;
  }
}

.menu-item:hover a,
.menu-item.current-menu-item a {
  color: #00c3ff;
}

@media screen and (min-width: 768px) {
  .menu-item:hover:before,
  .menu-item.current-menu-item:before {
    left: 50%;
    width: 50%;
  }
}

@media screen and (min-width: 768px) {
  .menu-item:hover:after,
  .menu-item.current-menu-item:after {
    left: auto;
    right: 50%;
    width: 50%;
  }
}

@media screen and (min-width: 768px) {
  .menu-item:hover .sub-menu {
    visibility: visible;
    opacity: 1;
    transform: translateY(0);
  }
}

.menu-item a:hover {
  color: #1a1b1e;
}

@media screen and (max-width: 768px) {
  .menu-item a {
    padding: 10px 0;
  }
}

.menu-item.menu-item-has-children > a {
  padding-right: 17px;
}

@media screen and (max-width: 768px) {
  .menu-item.menu-item-has-children > a {
    width: 100%;
    display: block;
    position: relative;
    color: #1a1b1e;
  }
}

.menu-item.menu-item-has-children > a:after {
  font: 500 11px/1 "Flaticon";
  position: absolute;
  width: 11px;
  height: 6px;
  right: 0;
  top: 50%;
  margin-top: -5px;
  content: "";
  color: rgba(85, 105, 135, 0.5);
}

@media screen and (max-width: 768px) {
  .menu-item.menu-item-has-children {
    display: flex;
    flex-direction: column;
  }
}

.menu-item .sub-menu {
  margin: 0;
  padding: 25px 0;
  background: #fff;
  box-shadow: 7px 5px 30px rgba(42, 67, 113, 0.15);
  border-radius: 15px;
  position: absolute;
  top: calc(100% + 10px);
  left: -40px;
  transform: translateY(30px);
  transition: all 0.3s ease-in-out;
  z-index: 10;
  visibility: hidden;
  opacity: 0;
  min-width: 290px;
}

@media screen and (max-width: 768px) {
  .menu-item .sub-menu {
    box-shadow: none;
    border-radius: 0;
    width: 100%;
    min-width: initial;
    top: auto;
    position: relative;
    left: 0;
    padding: 0;
    visibility: visible;
    opacity: 1;
    transform: none;
    overflow: hidden;
    height: 0;
    transition: height 0.5s;
  }
}

.menu-item .sub-menu:before {
  content: "";
  position: absolute;
  height: 10px;
  width: 100%;
  top: -10px;
  left: 0;
}

.menu-item .sub-menu .menu-item {
  margin-right: 0;
  display: block;
  position: relative;
  padding: 0 40px;
}

.menu-item .sub-menu .menu-item:before,
.menu-item .sub-menu .menu-item:after {
  display: none;
}

.menu-item .sub-menu .menu-item a {
  line-height: 30px;
  display: block;
  padding: 5px 0;
  position: relative;
  text-decoration: none;
  outline: none;
  text-transform: none;
  transition: all 0.2s linear;
}

@media screen and (min-width: 768px) {
  .menu-item .sub-menu .menu-item a:hover {
    color: #00c3ff;
    padding-left: 15px;
  }
}

@media screen and (min-width: 768px) {
  .menu-item .sub-menu .menu-item a:hover:before {
    left: 0;
    visibility: visible;
    opacity: 1;
  }
}

@media screen and (min-width: 768px) {
  .menu-item .sub-menu .menu-item a:before {
    position: absolute;
    content: "";
    top: 50%;
    left: -15px;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background-color: #00c3ff;
    transform: translateY(-50%);
    transition: all 0.2s linear;
    visibility: hidden;
    opacity: 0;
  }
}

@media screen and (max-width: 768px) {
  .menu-item .sub-menu .menu-item {
    padding: 0 15px;
    height: auto;
    margin-bottom: 0;
  }
}

.home .footer {
  padding-top: 170px;
}

@media screen and (max-width: 768px) {
  .home .footer {
    padding-top: 100px;
  }
}

.footer {
  background: linear-gradient(to left, #04b6f1 0%, #002cae 62%, #002cae 100%) #0160e7;
  padding-top: 110px;
  padding-bottom: 170px;
}

@media screen and (max-width: 768px) {
  .footer {
    padding-top: 60px;
    padding-bottom: 60px;
  }
}

.footer__title {
  font: 700 20px "RedHatDisplay";
  margin-bottom: 40px;
  color: #fff;
}

@media screen and (max-width: 768px) {
  .footer__title {
    margin-bottom: 20px;
  }
}

@media screen and (max-width: 768px) {
  .footer__column {
    margin-bottom: 20px;
    width: 100%;
  }
}

.footer__item {
  margin-bottom: 10px;
}

.footer__text {
  font: 400 16px/24px "RedHatDisplay";
  color: #9ee8ff;
}

@media screen and (max-width: 768px) {
  .footer .col {
    display: flex;
    order: 2;
  }
}

@media screen and (max-width: 768px) {
  .footer .col.subscribe-col {
    order: 1;
  }
}

.footer .form__subscribe {
  margin-top: 30px;
}

.form__subscribe .form__control {
  padding-right: 50px;
}

.form__subscribe .form__button {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 5px;
  right: 5px;
}

.form__subscribe .form__button i {
  color: #fff;
}

.form__group {
  position: relative;
  margin-bottom: 20px;
}

.form__group:last-child {
  margin-bottom: 0;
}

.form__control {
  background: #fff;
  box-shadow: 7px 5px 25px rgba(42, 67, 113, 0.15);
  border-radius: 25px;
  padding: 15px 20px;
  width: 100%;
  box-sizing: border-box;
}

.form__buttons {
  margin-top: 20px;
  text-align: center;
}

.slider .slick-dots {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 12px;
}

.slider .slick-slide {
  outline: none;
}

.slider .slick-dots li {
  background: #a5b7d2;
  width: 6px;
  height: 6px;
  transition: all .3s linear;
  border-radius: 50%;
}

.slider .slick-dots li:before,
.slider .slick-dots li button {
  display: none;
}

.slider .slick-dots li.slick-active {
  background: #15b7ec;
  width: 12px;
  height: 12px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
